name: eldono-de-la-tago

on:
  #schedule:
  # ĉiutage matene
  # * is a special character in YAML so you have to quote this string
  #- cron:  '15 8 * * *'
  #- cron:  '34 19 * * 2'
  push:
    branches:
    - master

# https://github.com/actions/create-release
# https://help.github.com/en/actions/reference/development-tools-for-github-actions
# https://github.com/actions/github-script

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        #echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"
        echo "TAGO=${Tagoj[ $(date +'%w') ]}" >> $GITHUB_ENV

    - name: "Eĥo..."
      run: |
        echo $TAGO

    # vd. https://github.com/actions/github-script
    - uses: actions/github-script@v6
      name: Movu etikedon al la nuna kap-pozicio
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          var result = {};
          const ref = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,            
              ref: 'heads/master'})
          const sha = ref.data.object.sha;
          console.log('HEAD is: '+sha);
          try {
            result = await github.rest.git.updateRef({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              sha: sha,
              ref: 'tags/v${{ env.TAGO }}',
              force: true })
          } catch(error) {
            console.log("AVERTO:");
            console.log(error);
            result = await github.rest.git.createRef({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              sha: sha,
              ref: 'refs/tags/v${{ env.TAGO }}' 
              })
          }
          console.log("RESULT...")
          console.log(result)

    - uses: actions/github-script@v6
      name: Forigu malnovan eldonon de tiu tago
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          try {
            const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}' })
            const release_id = release.data.id
            console.log('Release id is: '+release_id)
            const result = await github.rest.repos.deleteRelease({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              release_id: release_id })
            console.log("RESULT...")
            console.log(result)
          } catch(error)  {
            console.log("AVERTO:")
            console.log(error)
          }

####
#' create-release ne estas aktualigita, eble ni
# devas anstataŭe uzi https://octokit.github.io/rest.js/v19#repos-create-release
    - name: Rekreu eldonon kun sama etikedo (semajntago)
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.TAGO }}
        name: Eldono de ${{ env.TAGO }}
        draft: false
        prerelease: false


  sqlitedb:
    needs: release
    runs-on: ubuntu-latest

    steps:

    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        #echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"
        echo "TAGO=${Tagoj[ $(date +'%w') ]}" >> $GITHUB_ENV


    - name: Eltrovu la URL de la hodiaŭa eldono
      uses: actions/github-script@v6
      id: retrieve_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
            const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}'
            })
            const upload_url = release.data.upload_url            
            console.log('UploadURL is: '+upload_url)
            core.setOutput('upload_url',upload_url)
            //console.log('::set-output name=upload_url::'+upload_url)

##'
## const core = require('@actions/core')
## core.setOutput('upload_url', upload_url)

    - name: Elŝutu la dosierojn 
      uses: actions/checkout@v3
    - name: Saluto al ghcr.io
        # https://github.community/t5/GitHub-Actions/Use-docker-images-from-GitHub-Package-Registry/td-p/30407    
        # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml    
      #run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
      run: echo "$GITHUB_TOKEN" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin 
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Prenu procesumon voko-formiko
      run: docker pull "ghcr.io/revuloj/voko-formiko/voko-formiko:latest"
    - name: Kreu dosierujojn por konservi la rezultojn ...
      run: |
        mkdir $GITHUB_WORKSPACE/tgz
        #mkdir $GITHUB_WORKSPACE/tmp
        chmod 777 $GITHUB_WORKSPACE/t??
        ls -l $GITHUB_WORKSPACE
    - name: Kreu SQLite-datumbazon el la XML-dosieroj
      run: docker run --name voko-formiko 
        -v $GITHUB_WORKSPACE/revo:/home/formiko/revo/xml 
        -v $GITHUB_WORKSPACE/tgz:/home/formiko/tgz
        ghcr.io/revuloj/voko-formiko/voko-formiko:latest 
        formiko srv-sqlite-db-tuto

# vd. https://github.com/actions/upload-release-asset
    - name: Retrovu la rezultintajn ZIP-dosierujojn
      id: retrovu_zip
      run: |
        ls -l $GITHUB_WORKSPACE/tgz
        #echo "::set-output name=revosql::$(ls tgz/revosql_20*)"
        #echo "::set-output name=revosql_inx::$(ls tgz/revosql-inx_20*)"
        echo "revosql=$(ls tgz/revosql_20*)" >> $GITHUB_OUTPUT
        echo "revosql_inx=$(ls tgz/revosql-inx_20*)" >> $GITHUB_OUTPUT

    # upload-release-asset ne plu flegata,
    # eble uzu anst. https://github.com/softprops/action-gh-release
    # aŭ https://github.com/alexellis/upload-assets
    # aŭ sekwah41/upload-release-assets@v1
    # aŭ https://github.com/AButler/upload-release-assets
    - name: Alpendigu sqlrevo-inx
      id: upload-inx 
      uses: sekwah41/upload-release-assets@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.retrieve_release.outputs.upload_url }} 
        asset_path: ${{ steps.retrovu_zip.outputs.revosql_inx }}
        asset_name: ${{ steps.retrovu_zip.outputs.revosql_inx }}
        asset_content_type: application/zip
    - name: Alpendigu sqlrevo
      id: upload-inx-art 
      uses: sekwah41/upload-release-assets@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.retrieve_release.outputs.upload_url }} 
        asset_path: ${{ steps.retrovu_zip.outputs.revosql }}
        asset_name: ${{ steps.retrovu_zip.outputs.revosql }}
        asset_content_type: application/zip

# about download: https://help.github.com/en/github/administering-a-repository/linking-to-releases
# /owner/name/releases/latest/download/asset-name.zip