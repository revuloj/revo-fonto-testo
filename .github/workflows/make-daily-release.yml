name: make-daily-release

on:
  #schedule:
  # ĉiutage matene
  # * is a special character in YAML so you have to quote this string
  #- cron:  '15 8 * * *'
  #- cron:  '34 19 * * 2'
  push:
    branches:
    - master

# https://github.com/actions/create-release
# https://help.github.com/en/actions/reference/development-tools-for-github-actions
# https://github.com/actions/github-script

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"
    - name: "Eĥo..."
      run: |
        echo $TAGO

    - uses: actions/github-script@0.4.0
      name: Movu etikedon al la nuna kap-pozicio
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,            
              ref: 'heads/master'})
          const sha = ref.data.object.sha;
          console.log('HEAD is: '+sha);
          try {
            const result = await github.git.updateRef({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              sha: sha,
              ref: 'tags/v${{ env.TAGO }}',
              force: true })
          } catch(error) {
            console.log("ERROR:");
            console.log(error);
            const result = await github.git.createRef({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              sha: sha,
              ref: 'refs/tags/v${{ env.TAGO }}' 
              })
          }
          console.log("RESULT...")
          console.log(result)

    - uses: actions/github-script@0.4.0
      name: Forigu malnovan eldonon de tiu tago
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          try {
            const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}' })
            const release_id = release.data.id
            console.log('Release id is: '+release_id)
            const result = await github.repos.deleteRelease({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              release_id: release_id })
            console.log("RESULT...")
            console.log(result)
          } catch(error)  {
            console.log("ERROR:")
            console.log(error)
          }

####
#'
    - name: Rekreu eldonon kun sama etikedo (semajntago)
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.TAGO }}
        release_name: Eldono de ${{ env.TAGO }}
        draft: false
        prerelease: false

