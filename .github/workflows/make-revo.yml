name: make-revo

on:
  push:
    branches:
      - master

## tio funkcias nur por mane kreitaj eldonoj!
##  release:
##    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
##    types: [created, prereleased]

##    # Provizu eldonojn `vLundo` ktp. per SQLite-DB
##    # (alternative oni povus akcepti ĉiun eldonon kaj alpendigi al tiu)
##
##    tags:
##      - vLundo      
##      - vMardo      
##      - vMerkredo      
##      - vĴaŭdo      
##      - vVendredo      
##      - vSabato      
##      - vDimanĉo      


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
#    - name: Elŝutu la dosierojn 
#      uses: actions/checkout@v1
#      with:
#          path: revo-fonto

    - uses: actions/github-script@0.4.0
      name: Eltrovu la pozicion de marko 'nokta-formiko'
      id: trovu_noktan_formikon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'tags/nokta-formiko'})
          const sha = ref.data.object.sha
          console.log('nokta-formiko estas ĉe: '+sha)
          console.log('::set-output name=sha_nf::'+sha)

    # https://github.community/t5/GitHub-Actions/Use-docker-images-from-GitHub-Package-Registry/td-p/30407    
    # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml    
    - name: Saluto al docker.pkg.github.com kaj preni voko-formiko
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        docker pull "docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest"

    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
    - name: Kreu dosierujojn por konservi la rezultojn ...
      run: |
        mkdir .tgz

    - name: Kreu la tutan vortaron
      run: docker run -u1001
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto-testo.git
        -v $GITHUB_WORKSPACE/.tgz:/home/formiko/tgz
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest 
        formiko -Dsha=${{ steps.trovu_noktan_formikon.outputs.sha_nf }} srv-servo-github

    - name: Rigardu kaj ŝovu la rezulton
      run: |
        #tar -czf revo.tgz $GITHUB_WORKSPACE/revo
        ls -l .tgz/*
        mv .tgz/revohtml_* .tgz/revohtml.1.zip

    - uses: actions/github-script@0.4.0
      name: Eltrovu la nunan pozicion (kapo)
      id: trovu_kapon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'heads/master'})
          const sha = ref.data.object.sha
          console.log('heads/master estas ĉe: '+sha)
          console.log('::set-output name=sha_hm::'+sha)

    - name: Rekreu la tutan vortaron
      run: docker run -u1001
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto-testo.git
        -v $GITHUB_WORKSPACE/.tgz:/home/formiko/tgz
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest 
        formiko -Dsha=${{ steps.trovu_kapon.outputs.sha_hm }} srv-servo-github

# vd. https://github.com/actions/upload-release-asset
    - name: Rigardu la rezulton
      run: |
        #tar -czf revo.tgz $GITHUB_WORKSPACE/revo
        ls -l .tgz/*

    - name: Konservu rezultintajn 2 arĥivojn
      uses: actions/upload-artifact@v1
      with:
        name: zips
        path: .tgz

